 
@*  

@model IEnumerable<BookModel>   // to use the BookModel IEnumerable because we want list

 *@

@{
    ViewData["Title"] = "All Books";

}






<div class="container">
    <h3 class="display-4 text-center">All books </h3>

    <div class="row"> 

        @foreach(var book in Model)
        {
            <div class="col-md-4">
                <div class="card mb-4 shadow-sm">
                    <svg class="bd-placeholder-img card-img-top" width="100%" height="225" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMidYMid slice" focusable="false" role="img" aria-label="Placeholder: Thumbnail"><title>Placeholder</title><rect width="100%" height="100%" fill="#55595c"></rect><text x="50%" y="50%" fill="#eceeef" dy=".3em">Thumbnail</text></svg>
                    <div class="card-body">
                        <h3 class="card-title">@book.Title </h3>
                        @{
                            static string TruncateDescription(string description, int maxLength)
                            {
                                if (string.IsNullOrEmpty(description) || description.Length <= maxLength)
                                {
                                    return description;
                                }
                                else
                                {
                                    return description.Substring(0, maxLength) + " ..."; // You can change "..." to any other indicator.
                                }
                            }
                            
                            int maxDescriptionLength = 300;
                            string truncatedBook1Description = TruncateDescription(@book.Description, maxDescriptionLength);
                          }
                        <p class="card-text">@truncatedBook1Description</p>
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="btn-group">

                                <!--accessing particular book form get all books page-->
                                <!--   <a  href="/book/getbook/book.Id" class="btn btn-sm btn-outline-secondary">View details</a> -->
                                <a asp-route="bookDetailsRoute" asp-route-id="@book.Id"
                                 
                                    class="btn btn-sm btn-outline-secondary">View details</a> <!--using anchor tag helper-->
                            </div>
                            <small class="text-muted">@book.Author</small>
                        </div>
                    </div>
                </div>
            </div>
            
        }
        
    </div>
</div>